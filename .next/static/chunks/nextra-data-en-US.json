{"/MSRIT/BootCamp-2025/Session-3/Networking-Basics/NETWORKING-CONCEPTS":{"title":"Afternoon Session: Networking Basics","data":{"1-ip-addressing-subnetting-and-dns-configuration#1. IP Addressing, Subnetting, and DNS Configuration":"","11-understanding-ip-addresses#1.1 Understanding IP Addresses":"IPv4 Basics:\nAn IP address is a unique identifier for a device on a network.\nIt consists of four octets (e.g., 192.168.1.1) and follows the format of X.X.X.X, where X ranges from 0 to 255.\nClasses: A (1.0.0.0 to 126.255.255.255), B (128.0.0.0 to 191.255.255.255), C (192.0.0.0 to 223.255.255.255), D (Multicast), E (Experimental).\nPrivate IP Ranges:\nClass A: 10.0.0.0 - 10.255.255.255\nClass B: 172.16.0.0 - 172.31.255.255\nClass C: 192.168.0.0 - 192.168.255.255\nPublic vs. Private IPs: Private IPs are used within local networks, while public IPs are routable over the internet.\nIPv6 Basics:\nA 128-bit address written in hexadecimal format (e.g., 2001:0db8:85a3::8a2e:0370:7334).\nSupports a much larger number of unique addresses.\nDesigned to replace IPv4 due to address exhaustion.","12-understanding-subnetting#1.2 Understanding Subnetting":"Subnet Mask:\nDefines which portion of the IP address is the network and which is the host.\nExample: 255.255.255.0 means the first three octets represent the network, and the last octet represents hosts.\nCIDR Notation:\nWritten as IP/Prefix (e.g., 192.168.1.0/24).\n/24 means the first 24 bits are for the network, leaving 8 bits for host addresses.\nSubnetting Example:\nIf we divide 192.168.1.0/24 into two subnets:\n192.168.1.0/25 (First half: 192.168.1.1 to 192.168.1.126)\n192.168.1.128/25 (Second half: 192.168.1.129 to 192.168.1.254)\nThis allows better allocation of IPs within large networks.","13-dns-domain-name-system-configuration#1.3 DNS (Domain Name System) Configuration":"How DNS Works:\nTranslates domain names (e.g., google.com) into IP addresses.\nUses a hierarchy of DNS servers (Root, TLD, and Authoritative).\nTypes of DNS Records:\nA (Address Record) – Maps a domain to an IPv4 address.\nAAAA – Maps a domain to an IPv6 address.\nCNAME (Canonical Name) – Redirects one domain to another.\nMX (Mail Exchange) – Defines mail servers for a domain.\nPTR (Pointer Record) – Reverse DNS lookup.\nSetting Up a Local DNS Server:\nInstall a DNS server package (bind9 on Linux).\nConfigure /etc/bind/named.conf.local to define zones.\nAdd zone files (/var/named/example.com.zone) with DNS records.\nRestart the DNS service and test using nslookup or dig.","2-hands-on-lab#2. Hands-On Lab":"","21-setting-up-a-simple-local-network-using-multiple-machines#2.1 Setting Up a Simple Local Network Using Multiple Machines":"","prerequisites#Prerequisites:":"At least two computers (or virtual machines).\nA router or switch (or software-defined networking tools like VirtualBox’s NAT).\nNetwork cables (if using physical machines).","steps#Steps:":"Assign Static IPs (or use DHCP for automatic IP assignment).\nExample:\nPC1: 192.168.1.10/24\nPC2: 192.168.1.11/24\nGateway (Router): 192.168.1.1/24\nEnable DHCP Server on one machine (if required):\nInstall isc-dhcp-server on Linux.\nConfigure /etc/dhcp/dhcpd.conf:\nsubnet 192.168.1.0 netmask 255.255.255.0 {\n    range 192.168.1.50 192.168.1.100;\n    option routers 192.168.1.1;\n    option domain-name-servers 8.8.8.8;\n}\nRestart the DHCP service: sudo systemctl restart isc-dhcp-server.\nEnable DNS Resolution:\nSet primary DNS server to 192.168.1.1 on all devices.\nVerify DNS resolution using nslookup example.com.\nNetwork Connectivity Test:\nPing test between machines: ping 192.168.1.11 from 192.168.1.10.\nCheck default gateway: ip route show.","22-troubleshooting-common-network-issues#2.2 Troubleshooting Common Network Issues":"","issue-1-no-internet-connectivity#Issue 1: No Internet Connectivity":"Check IP Configuration: ip addr show (Linux) or ipconfig (Windows).\nVerify Default Gateway: ip route or tracert 8.8.8.8.\nDNS Resolution: Test using nslookup google.com.","issue-2-ip-conflict#Issue 2: IP Conflict":"Check for duplicate IPs using arp -a.\nUse DHCP to avoid static IP conflicts.","issue-3-firewall-blocking-connections#Issue 3: Firewall Blocking Connections":"Disable firewall temporarily: sudo ufw disable (Linux) or netsh advfirewall set allprofiles state off (Windows).\nAdd firewall rules to allow necessary traffic.","issue-4-slow-network#Issue 4: Slow Network":"Check bandwidth usage: iftop (Linux) or task manager (Windows).\nRestart the router or switch.\nReduce interference if using Wi-Fi."}},"/MSRIT/BootCamp-2025/Assessment/User-Management-and-File-Sharing":{"title":"User Management and File Sharing","data":{"assessment-task-user-management-and-file-sharing#Assessment Task: User Management and File Sharing":"","task-overview#Task Overview:":"You are tasked with setting up a basic student lab environment using both Linux and Windows systems.","task-steps#Task Steps:":"","1-linux#1. Linux:":"Create a user called \"student1\".\nAssign a password and set default directories for the user.\nSet up a shared folder using Samba and assign read/write access to the user.","2-windows#2. Windows:":"Create a user called \"student1\" using PowerShell.\nSet up a shared folder and grant the user read/write access.","3-security#3. Security:":"Restrict write access to the shared folder on Linux during exam time using permissions.\nOn Windows, use Group Policy to restrict access to critical system settings.","objective#Objective:":"Ensure proper user creation, file sharing, and security configurations.\nDemonstrate basic troubleshooting for access issues."}},"/MSRIT/BootCamp-2025/Session-3/Networking-Basics/SETUP-DHCP":{"title":"Setting Up DHCP and DNS Servers for Local Networking","data":{"1-dhcp-server-setup#1. DHCP Server Setup":"A DHCP (Dynamic Host Configuration Protocol) server automatically assigns IP addresses to devices (clients) on a network, eliminating the need to manually configure each device.","steps-to-set-up-a-dhcp-server-on-a-linux-server#Steps to Set Up a DHCP Server on a Linux Server:":"Install the DHCP server:\nOn a Linux server, you can install the ISC DHCP Server using the following commands:\nsudo apt update\nsudo apt install isc-dhcp-server\n 2.\tConfigure the DHCP server:\nThe DHCP configuration file is typically located at /etc/dhcp/dhcpd.conf. Edit it to define the network range and settings.\nExample of the configuration:sudo nano /etc/dhcp/dhcpd.confAdd the following configuration:subnet 192.168.1.0 netmask 255.255.255.0 {\nrange 192.168.1.100 192.168.1.200;  # IP range for clients\noption routers 192.168.1.1;  # Gateway IP\noption domain-name-servers 192.168.1.1;  # DNS server address\noption domain-name \"localnetwork\";  # Network domain name\ndefault-lease-time 600;  # Lease time in seconds\nmax-lease-time 7200;  # Max lease time in seconds\n}\n3.\tDefine the network interface:\nThe server needs to know which network interface it should listen on. Open /etc/default/isc-dhcp-server to specify the interface (e.g., eth0):sudo nano /etc/default/isc-dhcp-serverChange the line to:INTERFACESv4=\"eth0\"\n4.\tRestart the DHCP service:\nAfter configuring, restart the DHCP server to apply the changes:sudo systemctl restart isc-dhcp-server\n5.\tCheck the status:\nTo verify if the DHCP server is running:sudo systemctl status isc-dhcp-server\nDNS Server Setup\nA DNS server is responsible for resolving domain names to IP addresses. Here, we’ll set up a simple DNS server using BIND (Berkeley Internet Name Domain) on a Linux system.Steps to Set Up a DNS Server Using BIND:\n1.\tInstall BIND (DNS Server):\nInstall the BIND9 package using the following commands:sudo apt update\nsudo apt install bind9 bind9utils bind9-doc\n2.\tConfigure BIND for Local DNS:\nThe main configuration file for BIND is /etc/bind/named.conf.local. You need to define your local DNS zones here.\nExample configuration for a local domain:sudo nano /etc/bind/named.conf.localAdd the following lines for your local domain (localnetwork):zone \"localnetwork\" {\ntype master;\nfile \"/etc/bind/db.localnetwork\";  # Path to your local DNS file\n};\n3.\tCreate the Zone File:\nNow, create a zone file that defines how domain names in the localnetwork domain will be resolved.sudo nano /etc/bind/db.localnetworkExample contents for the db.localnetwork file:$TTL    604800\n@       IN      SOA     ns1.localnetwork. admin.localnetwork. (\n2025021701 ; Serial\n604800     ; Refresh\n86400      ; Retry\n2419200    ; Expire\n604800 )   ; Negative Cache TTL; Name servers\n@       IN      NS      ns1.localnetwork.; A records for your local devices\nns1     IN      A       192.168.1.1\nserver  IN      A       192.168.1.2This defines a DNS zone for localnetwork, with an ns1 and a server host.\n4.\tConfigure DNS Resolver:\nYou need to make sure that BIND uses the correct resolver. Edit /etc/bind/named.conf.options:sudo nano /etc/bind/named.conf.optionsExample to use a public DNS resolver (like Google’s DNS):options {\ndirectory \"/var/cache/bind\";\nforwarders {\n8.8.8.8;  # Google's DNS\n8.8.4.4;  # Google's secondary DNS\n};\nallow-query { any; };\n};\n5.\tRestart BIND Service:\nAfter the configuration is complete, restart the DNS service:sudo systemctl restart bind9\n6.\tVerify DNS Configuration:\nTo check if your DNS server is working, you can use the dig command to query the local domain:dig @192.168.1.1 server.localnetworkIt should return the IP address 192.168.1.2 for the server host.SummaryDHCP Setup:\n•\tDHCP Server automatically assigns IP addresses to devices on the network.\n•\tConfiguration involves editing /etc/dhcp/dhcpd.conf to define IP ranges, gateways, and DNS servers.DNS Setup:\n•\tDNS Server translates domain names into IP addresses.\n•\tConfiguration involves setting up BIND, creating zone files, and defining local domain settings.Both DHCP and DNS servers simplify network management and ensure efficient IP address allocation and domain resolution."}}}