{"/":{"title":"Merit Path for Sessions 1 to 3","data":{"merit-path-overview#Merit Path Overview":"The merit path for sessions 1 to 3 is designed to provide structured learning experience, focusing on key topics and practical skills. Each session builds upon the previous one, ensuring a comprehensive understanding of the subject matter.","session-1-introduction-to-system-administration--user-management#Session 1: Introduction to System Administration & User Management":"","key-topics#Key Topics:":"Introduction to Linux and Windows system administration\nUser management in Linux and Windows\nHands-on exercises for creating and managing user accounts","session-2-security-for-exams#Session 2: Security for Exams":"","key-topics-1#Key Topics:":"Implementing security measures for exam environments\nConfiguring file and folder permissions\nUsing ACLs (Access Control Lists) for fine-grained access control\nHands-on exercises for setting up security configurations","session-3-networking-basics#Session 3: Networking Basics":"","key-topics-2#Key Topics:":"Understanding IP addressing and subnetting\nConfiguring DHCP and DNS servers\nSetting up a local network with multiple machines\nHands-on exercises for network setup and troubleshooting"}},"/MSRIT/BootCamp-2025/mysql":{"title":"Mysql","data":{"step-1-install-mysql-and-configure#Step 1: Install MySQL and Configure":"Update System Packages\nsudo apt update\nInstall MySQL Server\nsudo apt install mysql-server\nThis installs the MySQL server package on your system.\nSecure the MySQL Installation\nsudo mysql_secure_installation\nThis interactive script helps secure your MySQL installation by setting a root password, removing test databases, and disallowing remote root logins.\nLog into MySQL\nsudo mysql\nThis opens the MySQL shell as the root user.\nCreate a New Database for Student ProjectsIn the MySQL shell, run:\nCREATE DATABASE student_projects;\nThis command creates a dedicated database for your student projects.\nCreate a New User and Grant PrivilegesIn the MySQL shell, execute:\nCREATE USER 'student'@'localhost' IDENTIFIED BY 'your_password';\nGRANT ALL PRIVILEGES ON student_projects.* TO 'student'@'localhost';\nFLUSH PRIVILEGES;\nThis creates a user named student with the specified password and grants them full privileges on the student_projects database. Flushing privileges applies the changes immediately.\nExit MySQL\nEXIT;\nList All MySQL Users\nSELECT User, Host FROM mysql.user;\nCount the Total Number of Users\nSELECT COUNT(*) AS total_users FROM mysql.user;","step-2-uninstall-mysql#Step 2: Uninstall MySQL":"Stop the MySQL ServiceFirst, stop the running MySQL service:\nsudo systemctl stop mysql\nRemove MySQL PackagesUninstall MySQL server, client, and common packages along with their configuration files:\nsudo apt remove --purge mysql-server mysql-client mysql-common\nClean Up Unnecessary DependenciesRemove any packages that were installed as dependencies for MySQL and are no longer needed:\nsudo apt autoremove\nsudo apt autoclean\nRemove MySQL Configuration and Data FilesDelete the MySQL directories to remove any remaining configuration files and databases:\nsudo rm -rf /etc/mysql /var/lib/mysql /var/log/mysql","option-2-enabling-the-general-query-log#Option 2: Enabling the General Query Log":"If you want to record all commands executed by the server (not just interactive commands), you can enable MySQL’s general query log. This log will capture every SQL statement processed by the server.\nEdit the MySQL Configuration FileOpen the MySQL configuration file (location may vary; on Ubuntu, it’s often at /etc/mysql/mysql.conf.d/mysqld.cnf):\nsudo nano /etc/mysql/mysql.conf.d/mysqld.cnf\nEnable the General Query LogUnder the [mysqld] section, add or modify the following lines:\ngeneral_log_file        = /var/log/mysql/mysql.log\ngeneral_log             = 1\nSave and Exit\nRestart MySQL to Apply Changes\nsudo systemctl restart mysql\nView the Log FileTo monitor the log file in real time, use:\nsudo tail -f /var/log/mysql/mysql.log\nThe general query log records every query processed by the server, which is useful for debugging but can impact performance, so it’s best used temporarily.By following these steps, you can:\nList all MySQL users.\nCount the total number of user accounts.\nCheck the commands you’ve executed in the MySQL shell either via the client history file or by enabling the general query log for a more comprehensive audit.","step-1-install-mongodb-and-configure#Step 1: Install MongoDB and Configure":"1Below is a sample README.md file that covers installing MongoDB 8.0 on Ubuntu, creating a database user, viewing database and user configuration, and finally uninstalling MongoDB.\n# MongoDB 8.0 Installation, Configuration, and Uninstallation Guide on Ubuntu\nThis guide demonstrates how to install MongoDB 8.0 on Ubuntu, configure a user for a custom database, view the database and user settings, and then completely remove MongoDB if needed.\n---\n## 1. Prerequisites\nCheck your Ubuntu version and install required tools:\n```bash\ncat /etc/lsb-release\nsudo apt-get install -y gnupg curl","2-install-mongodb-80#2. Install MongoDB 8.0":"","a-import-the-mongodb-gpg-key#a. Import the MongoDB GPG Key":"curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc | \\\n   sudo gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg --dearmor\nNote: The apt-key command is deprecated. This method stores the key in a secure keyring.","b-create-the-mongodb-source-list#b. Create the MongoDB Source List":"Replace noble with your Ubuntu codename if needed. For example, if you are using Ubuntu 20.04 (Focal), update it to focal:\necho \"deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list","c-update-the-package-database-and-install-mongodb#c. Update the Package Database and Install MongoDB":"sudo apt-get update\nsudo apt-get install -y mongodb-org","d-start-and-enable-the-mongodb-service#d. Start and Enable the MongoDB Service":"sudo systemctl start mongod\nsudo systemctl daemon-reload\nsudo systemctl enable mongod","3-configure-mongodb#3. Configure MongoDB":"","a-open-the-mongodb-shell#a. Open the MongoDB Shell":"MongoDB 8.0 uses the new shell called mongosh:\nmongosh","b-create-a-new-database-and-user#b. Create a New Database and User":"In the mongosh shell, switch to your custom database and create a user:\nuse student_projects\ndb.createUser({\n  user: \"student\",\n  pwd: \"your_password\",\n  roles: [{ role: \"readWrite\", db: \"student_projects\" }]\n})\nExplanation: This creates a user named student with read/write privileges on the student_projects database.","4-viewing-database-and-user-configurations#4. Viewing Database and User Configurations":"","a-list-all-databases#a. List All Databases":"In the mongosh shell, run:\nshow dbs\nThis command shows all databases currently present.","b-list-users-for-the-current-database#b. List Users for the Current Database":"To view all users in the current database (student_projects):\ndb.getUsers()","c-check-global-user-information#c. Check Global User Information":"Alternatively, switch to the admin database and list all users:\nuse admin\ndb.system.users.find().pretty()","d-review-mongodb-server-configuration#d. Review MongoDB Server Configuration":"The main configuration file is usually located at /etc/mongod.conf. To view it:\ncat /etc/mongod.conf","e-check-mongodb-service-status#e. Check MongoDB Service Status":"To verify that MongoDB is running properly:\nsudo systemctl status mongod","5-uninstalling-mongodb#5. Uninstalling MongoDB":"If you need to remove MongoDB from your system, follow these steps:","a-stop-the-mongodb-service#a. Stop the MongoDB Service":"sudo systemctl stop mongod","b-remove-mongodb-packages#b. Remove MongoDB Packages":"sudo apt-get purge -y mongodb-org*","c-remove-unnecessary-dependencies#c. Remove Unnecessary Dependencies":"sudo apt-get autoremove -y","d-delete-mongodb-data-and-log-directories#d. Delete MongoDB Data and Log Directories":"Warning: This will remove all MongoDB data and logs permanently.\nsudo rm -r /var/log/mongodb\nsudo rm -r /var/lib/mongodb"}},"/MSRIT/BootCamp-2025/apache":{"title":"Apache2 Installation and Virtual Host Setup for Education Website","data":{"":"This guide outlines the steps to install Apache2, set up a custom document root, and configure a virtual host on an Ubuntu server to serve content from /var/www/education.","step-1-update-and-install-apache2#Step 1: Update and Install Apache2":"Update your package lists and install Apache2:\nsudo apt update\nsudo apt install apache2","step-2-create-the-document-root#Step 2: Create the Document Root":"Create the directory for your website and adjust the ownership so you can manage the files:\nsudo mkdir -p /var/www/education\nsudo chown -R $USER:$USER /var/www/education","step-3-create-the-indexhtml-file#Step 3: Create the index.html File":"Navigate to the document root and create the index.html file:\ncd /var/www/education/\nnano index.html\nAdd the following HTML content to the file:\n<html>\n<head>\n  <title> Education </title>\n</head>\n<body>\n  <p> Education Website\n</body>\n</html>\nSave the file and exit the editor.","step-4-configure-the-virtual-host#Step 4: Configure the Virtual Host":"Navigate to Apache’s sites-available directory and copy the default configuration as a starting point:\ncd /etc/apache2/sites-available/\nsudo cp 000-default.conf education.conf\nEdit the new configuration file:\nsudo nano education.conf\nModify the DocumentRoot directive in education.conf so that it points to /var/www/education. For example:\nDocumentRoot /var/www/education\nSave and exit the file.","step-5-enable-the-new-virtual-host-and-reload-apache#Step 5: Enable the New Virtual Host and Reload Apache":"Enable your custom site and reload Apache to apply the changes:\nsudo a2ensite education.conf\nsudo systemctl reload apache2\nDisable the default site to ensure your custom virtual host is used:\nsudo a2dissite 000-default.conf\nsudo systemctl reload apache2","step-6-update-your-hosts-file#Step 6: Update Your Hosts File":"To test your configuration locally using a custom domain, edit your hosts file:\nsudo nano /etc/hosts\nAdd the following line:\n127.0.0.1    education.local","step-7-managing-server-logs#Step 7: Managing Server Logs":"To view the logs:\ntail -f /var/log/apache2/education_access.log\ntail -f /var/log/apache2/education_error.log","step-8-uninstall-apache2#Step 8: Uninstall Apache2":"If you need to uninstall Apache2 from your system, follow these steps:\nStop the Apache2 Service\nsudo systemctl stop apache2\nRemove the Apache2 PackageThis command will remove the Apache2 package:\nsudo apt remove apache2\nPurge Apache2 to Remove Configuration FilesTo remove Apache2 along with its configuration files, run:\nsudo apt purge apache2\nRemove Unnecessary DependenciesClean up any leftover packages that are no longer needed:\nsudo apt autoremove\nReference: https://ubuntu.com/tutorials/install-and-configure-apache#1-overview"}},"/MSRIT/BootCamp-2025/nginx":{"title":"Nginx Installation, Server Block Setup, and Uninstallation for Education Website","data":{"":"This guide provides step-by-step instructions to install Nginx, configure a custom server block to serve your website from /var/www/education, and uninstall Nginx if needed.","step-1-update-and-install-nginx#Step 1: Update and Install Nginx":"First, update your package lists and install Nginx:\nsudo apt update\nsudo apt install nginx","step-2-create-the-document-root#Step 2: Create the Document Root":"Create a directory for your website and adjust its ownership:\nsudo mkdir -p /var/www/education\nsudo chown -R $USER:$USER /var/www/education","step-3-create-the-indexhtml-file#Step 3: Create the index.html File":"Navigate to the document root and create the index.html file:\ncd /var/www/education/\nnano index.html\nAdd the following HTML content:\n<html>\n<head>\n  <title> Ubuntu rocks! </title>\n</head>\n<body>\n  <p> I'm running this website on an Ubuntu Server with Nginx!\n</body>\n</html>\nSave the file and exit the editor.","step-4-configure-the-server-block#Step 4: Configure the Server Block":"Create a new server block configuration file in Nginx’s sites-available directory:\nsudo nano /etc/nginx/sites-available/education\nPaste the following configuration into the file:\nserver {\n    listen 80;\n    server_name education.local;\n    root /var/www/education;\n    index index.html index.htm;\n    \n    access_log /var/log/nginx/education_access.log;\n    error_log /var/log/nginx/education_error.log;\n    \n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\nSave and exit the file.","step-5-enable-the-new-server-block-and-reload-nginx#Step 5: Enable the New Server Block and Reload Nginx":"Enable the configuration by creating a symbolic link to the sites-enabled directory, then test and reload Nginx:\nsudo ln -s /etc/nginx/sites-available/education /etc/nginx/sites-enabled/\nsudo nginx -t\nsudo systemctl reload nginx","step-6-update-your-hosts-file#Step 6: Update Your Hosts File":"To test your configuration locally using the custom domain, edit your hosts file:\nsudo nano /etc/hosts\nAdd the following line:\n127.0.0.1    education.local","step-7-managing-server-logs#Step 7: Managing Server Logs":"To view the logs:\ntail -f /var/log/nginx/education_access.log\ntail -f /var/log/nginx/education_error.log","step-8-uninstall-nginx#Step 8: Uninstall Nginx":"If you need to uninstall Nginx from your Ubuntu system, follow these steps:\nStop the Nginx Service\nsudo systemctl stop nginx\nRemove the Nginx Package\nsudo apt remove nginx\nPurge Nginx to Remove Configuration Files\nsudo apt purge nginx\nRemove Unnecessary Dependencies\nsudo apt autoremove"}}}